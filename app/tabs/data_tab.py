# -*- coding: utf-8 -*-
"""
–í–∫–ª–∞–¥–∫–∞ "–î–∞–Ω–Ω—ã–µ" - –ø—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î.
–ê–Ω–∞–ª–æ–≥ –≤–∫–ª–∞–¥–∫–∏ "–î–∞–Ω–Ω—ã–µ" –≤ Key Collector.
"""

from PySide6.QtWidgets import (
    QWidget, QHBoxLayout, QVBoxLayout, QTableWidget,
    QTableWidgetItem, QGroupBox, QPushButton, 
    QComboBox, QLabel, QLineEdit, QCheckBox
)
from PySide6.QtCore import Qt, Signal


class DataTab(QWidget):
    """
    –í–∫–ª–∞–¥–∫–∞ "–î–∞–Ω–Ω—ã–µ" - –ø—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î.
    –ê–Ω–∞–ª–æ–≥ –≤–∫–ª–∞–¥–∫–∏ "–î–∞–Ω–Ω—ã–µ" –≤ Key Collector.
    
    –°—Ç—Ä—É–∫—Ç—É—Ä–∞:
    - –¶–µ–Ω—Ç—Ä: —Ç–∞–±–ª–∏—Ü–∞ –≤—Å–µ—Ö —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö —Ñ—Ä–∞–∑
    - –°–ø—Ä–∞–≤–∞: –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø–∞–º–∏ + —Ñ–∏–ª—å—Ç—Ä—ã
    """
    
    def __init__(self):
        super().__init__()
        self.setup_ui()
    
    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞."""
        layout = QHBoxLayout()
        
        # === –¶–ï–ù–¢–†: –¢–∞–±–ª–∏—Ü–∞ –¥–∞–Ω–Ω—ã—Ö ===
        center_panel = self.create_center_panel()
        layout.addWidget(center_panel, stretch=3)
        
        # === –ü–†–ê–í–ê–Ø –ü–ê–ù–ï–õ–¨: –ì—Ä—É–ø–ø—ã + –§–∏–ª—å—Ç—Ä—ã ===
        right_panel = self.create_right_panel()
        layout.addWidget(right_panel, stretch=1)
        
        self.setLayout(layout)
    
    def create_center_panel(self):
        """–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –ø–∞–Ω–µ–ª—å - —Ç–∞–±–ª–∏—Ü–∞ –¥–∞–Ω–Ω—ã—Ö."""
        group = QGroupBox("–°–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        layout = QVBoxLayout()
        
        # –¢–∞–±–ª–∏—Ü–∞ –¥–∞–Ω–Ω—ã—Ö
        self.data_table = QTableWidget()
        self.data_table.setColumnCount(8)
        self.data_table.setHorizontalHeaderLabels([
            "–§—Ä–∞–∑–∞", "WS", '"WS"', "!WS", "–ì—Ä—É–ø–ø–∞", "–†–µ–≥–∏–æ–Ω", "–î–∞—Ç–∞", "–ò—Å—Ç–æ—á–Ω–∏–∫"
        ])
        self.data_table.setSelectionBehavior(QTableWidget.SelectRows)
        self.data_table.setAlternatingRowColors(True)
        self.data_table.setSortingEnabled(True)
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î (–∑–∞–≥–ª—É—à–∫–∞)
        self.load_data()
        
        layout.addWidget(self.data_table)
        
        # –ö–Ω–æ–ø–∫–∏ –ø–æ–¥ —Ç–∞–±–ª–∏—Ü–µ–π
        btn_layout = QHBoxLayout()
        
        btn_export = QPushButton("üì§ –≠–∫—Å–ø–æ—Ä—Ç –≤—ã–±–æ—Ä–∫–∏")
        btn_export.clicked.connect(self.on_export_selection)
        btn_layout.addWidget(btn_export)
        
        btn_delete = QPushButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–æ–µ")
        btn_delete.clicked.connect(self.on_delete_selected)
        btn_layout.addWidget(btn_delete)
        
        btn_layout.addStretch()
        layout.addLayout(btn_layout)
        
        group.setLayout(layout)
        return group
    
    def create_right_panel(self):
        """–ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø–∞–º–∏ –∏ —Ñ–∏–ª—å—Ç—Ä—ã."""
        group = QGroupBox("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ —Ñ–∏–ª—å—Ç—Ä—ã")
        layout = QVBoxLayout()
        
        # === –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø–∞–º–∏ ===
        lbl_groups = QLabel("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø–∞–º–∏:")
        lbl_groups.setStyleSheet("font-weight: bold;")
        layout.addWidget(lbl_groups)
        
        self.cmb_group = QComboBox()
        self.cmb_group.addItems(["–í—Å–µ", "–∫–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–∏–µ", "—á–µ—Ä–Ω–æ–≤—ã–µ", "–æ–∫—Ä–∞—Å–æ—á–Ω—ã–µ"])
        self.cmb_group.currentTextChanged.connect(self.on_group_filter_changed)
        layout.addWidget(self.cmb_group)
        
        btn_create_group = QPushButton("üìÅ –°–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É")
        btn_create_group.clicked.connect(self.on_create_group)
        layout.addWidget(btn_create_group)
        
        btn_rename_group = QPushButton("‚úèÔ∏è –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å")
        btn_rename_group.clicked.connect(self.on_rename_group)
        layout.addWidget(btn_rename_group)
        
        btn_delete_group = QPushButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –≥—Ä—É–ø–ø—É")
        btn_delete_group.clicked.connect(self.on_delete_group)
        layout.addWidget(btn_delete_group)
        
        layout.addSpacing(20)
        
        # === –§–∏–ª—å—Ç—Ä—ã ===
        lbl_filters = QLabel("–§–∏–ª—å—Ç—Ä—ã:")
        lbl_filters.setStyleSheet("font-weight: bold;")
        layout.addWidget(lbl_filters)
        
        # –ü–æ–∏—Å–∫ –ø–æ —Ñ—Ä–∞–∑–µ
        lbl_search = QLabel("–ü–æ–∏—Å–∫:")
        layout.addWidget(lbl_search)
        
        self.txt_search = QLineEdit()
        self.txt_search.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ —Ñ—Ä–∞–∑—É...")
        self.txt_search.textChanged.connect(self.on_search_changed)
        layout.addWidget(self.txt_search)
        
        # –§–∏–ª—å—Ç—Ä –ø–æ —á–∞—Å—Ç–æ—Ç–Ω–æ—Å—Ç–∏
        self.chk_no_freq = QCheckBox("–ë–µ–∑ —á–∞—Å—Ç–æ—Ç–Ω–æ—Å—Ç–∏ (WS = 0)")
        self.chk_no_freq.toggled.connect(self.apply_filters)
        layout.addWidget(self.chk_no_freq)
        
        self.chk_low_freq = QCheckBox("–ù–∏–∑–∫–æ—á–∞—Å—Ç–æ—Ç–Ω—ã–µ (WS < 100)")
        self.chk_low_freq.toggled.connect(self.apply_filters)
        layout.addWidget(self.chk_low_freq)
        
        self.chk_high_freq = QCheckBox("–í—ã—Å–æ–∫–æ—á–∞—Å—Ç–æ—Ç–Ω—ã–µ (WS > 1000)")
        self.chk_high_freq.toggled.connect(self.apply_filters)
        layout.addWidget(self.chk_high_freq)
        
        # –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        btn_reset = QPushButton("üîÑ –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã")
        btn_reset.clicked.connect(self.reset_filters)
        layout.addWidget(btn_reset)
        
        layout.addStretch()
        
        # === –≠–∫—Å–ø–æ—Ä—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –≥—Ä—É–ø–ø ===
        btn_export_structure = QPushButton("üìä –≠–∫—Å–ø–æ—Ä—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã")
        btn_export_structure.clicked.connect(self.on_export_structure)
        layout.addWidget(btn_export_structure)
        
        btn_import_structure = QPushButton("üì• –ò–º–ø–æ—Ä—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã")
        btn_import_structure.clicked.connect(self.on_import_structure)
        layout.addWidget(btn_import_structure)
        
        group.setLayout(layout)
        return group
    
    def load_data(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î (–∑–∞–≥–ª—É—à–∫–∞)."""
        # TODO: –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ freq_results
        sample_data = [
            ["–æ—Ç–¥–µ–ª–æ—á–Ω—ã–µ —Ñ–∏–Ω–∏—à–Ω—ã–µ", "245", "-", "-", "–æ–∫—Ä–∞—Å–æ—á–Ω—ã–µ", "–ú–æ—Å–∫–≤–∞ (213)", "23.10.2025", "Wordstat"],
            ["—Ñ–∏–Ω–∏—à–Ω—ã–µ —á–µ—Ä–Ω–æ–≤—ã–µ", "2", "-", "-", "—Ñ–∏–Ω–∏—à–Ω—ã–µ", "–ú–æ—Å–∫–≤–∞ (213)", "23.10.2025", "Wordstat"],
            ["–æ—Ç–¥–µ–ª–∫–∞ –æ–∫—Ä–∞—Å–æ—á–Ω—ã–µ", "349", "-", "-", "–æ–∫—Ä–∞—Å–æ—á–Ω—ã–µ", "–ú–æ—Å–∫–≤–∞ (213)", "23.10.2025", "Wordstat"],
        ]
        
        self.data_table.setRowCount(len(sample_data))
        for row, row_data in enumerate(sample_data):
            for col, value in enumerate(row_data):
                self.data_table.setItem(row, col, QTableWidgetItem(value))
    
    def on_group_filter_changed(self, group_name: str):
        """–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –≥—Ä—É–ø–ø–µ."""
        print(f"[–î–∞–Ω–Ω—ã–µ] –§–∏–ª—å—Ç—Ä –ø–æ –≥—Ä—É–ø–ø–µ: {group_name}")
        self.apply_filters()
    
    def on_search_changed(self, text: str):
        """–ü–æ–∏—Å–∫ –ø–æ —Ñ—Ä–∞–∑–µ."""
        print(f"[–î–∞–Ω–Ω—ã–µ] –ü–æ–∏—Å–∫: {text}")
        self.apply_filters()
    
    def apply_filters(self):
        """–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤."""
        # TODO: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º
        print("[–î–∞–Ω–Ω—ã–µ] –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤")
    
    def reset_filters(self):
        """–°–±—Ä–æ—Å –≤—Å–µ—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤."""
        self.cmb_group.setCurrentIndex(0)
        self.txt_search.clear()
        self.chk_no_freq.setChecked(False)
        self.chk_low_freq.setChecked(False)
        self.chk_high_freq.setChecked(False)
        self.apply_filters()
    
    def on_create_group(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã."""
        # TODO: –î–∏–∞–ª–æ–≥ —Å–æ–∑–¥–∞–Ω–∏—è
        print("[–î–∞–Ω–Ω—ã–µ] –°–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É")
    
    def on_rename_group(self):
        """–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã."""
        # TODO: –î–∏–∞–ª–æ–≥ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è
        print("[–î–∞–Ω–Ω—ã–µ] –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –≥—Ä—É–ø–ø—É")
    
    def on_delete_group(self):
        """–£–¥–∞–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã."""
        # TODO: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
        print("[–î–∞–Ω–Ω—ã–µ] –£–¥–∞–ª–∏—Ç—å –≥—Ä—É–ø–ø—É")
    
    def on_export_selection(self):
        """–≠–∫—Å–ø–æ—Ä—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö."""
        # TODO: –î–∏–∞–ª–æ–≥ —ç–∫—Å–ø–æ—Ä—Ç–∞
        print("[–î–∞–Ω–Ω—ã–µ] –≠–∫—Å–ø–æ—Ä—Ç –≤—ã–±–æ—Ä–∫–∏")
    
    def on_delete_selected(self):
        """–£–¥–∞–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫."""
        # TODO: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
        print("[–î–∞–Ω–Ω—ã–µ] –£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–æ–µ")
    
    def on_export_structure(self):
        """–≠–∫—Å–ø–æ—Ä—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –≥—Ä—É–ø–ø."""
        # TODO: –≠–∫—Å–ø–æ—Ä—Ç –≤ JSON
        print("[–î–∞–Ω–Ω—ã–µ] –≠–∫—Å–ø–æ—Ä—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã")
    
    def on_import_structure(self):
        """–ò–º–ø–æ—Ä—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –≥—Ä—É–ø–ø."""
        # TODO: –ò–º–ø–æ—Ä—Ç –∏–∑ JSON
        print("[–î–∞–Ω–Ω—ã–µ] –ò–º–ø–æ—Ä—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã")